\programVariables{
  /* R A; * walle's maximum acceleration */
  /* R B; * walle's maximum braking */
  R T; /* Time-trigger limit on evolution */
  R t;  /* time */
  R x_w; /* Position of walle in x direction */
  R y_w; /* Position of walle in y direction */
  R z_w; /* Position of walle in z direction */
  R dx_w; /* Unit vector in direction of travel, x direction */
  R dy_w; /* Unit vector in direction of travel, y direction */
  R dz_w; /* Unit vector in direction of travel, z direction */
  R r_w; /* Radius of the walle */
  R v_w; /* Linear velocity of walle */
  /* R a_w; * Linear acceleration of walle */
  /* R cute_r_w; * Radius of walle's track */

  R x_e; /* Position of eve in x direction */
  R y_e; /* Position of eve in y direction */
  R z_e; /* Position of eve in z direction */
  R dx_e; /* Unit vector in direction of travel, x direction */
  R dy_e; /* Unit vector in direction of travel, y direction */
  R dz_e; /* Unit vector in direction of travel, z direction */
  R r_e; /* Radius of the eve */
  R v_e; /* Linear velocity of eve */
  /* R e_a; * Linear acceleration of eve */
  /* R cute_r_e; * Radius of eve's track */

  /* R c_love_x; * center of circle they are circling */
  /* R c_love_y; * center of circle they are circling */

  R minr; /* Minimum turning radius */
  /* R buffer; * Required distance between center of walle and center of eve */
  R cute_r; /* Max distance between center of walle and center of eve */
}

\problem{
(
v_w > 0 & v_e > 0 & v_w = v_e &
T > 0 &
x_w = cute_r*dy_w &
y_w = -cute_r*dx_w &
x_e = cute_r*dy_e &
y_e = -cute_r*dx_e &
r_w > 0 & r_e > 0 & /* buffer > r + r_e & */
(x_w)^2 + (y_w)^2 = cute_r^2 &
(x_e)^2 + (y_e)^2 = cute_r^2 &
dx_w^2 + dy_w^2 = 1 & dx_e^2 + dy_e^2 = 1 &
dz_w = 1 & dz_e = 1 &
(x_w - x_e)^2 + (y_w - y_e)^2 = (2*cute_r)^2
)
->
\[(
   t := 0;
   {
     x_w' = v_w*dx_w, y_w' = v_w*dy_w, z_w' = dz_w, /* v_w' = a_w, */
     dx_w' = -v_w*dy_w/cute_r, dy_w' = v_w*dx_w/cute_r, dz_w' = 0,

     x_e' = v_e*dx_e, y_e' = v_e*dy_e, z_e' = dz_e, /* v_e' = e_a, */
     dx_e' = -v_e*dy_e/cute_r, dy_e' = v_e*dx_e/cute_r, dz_e' = 0,

     t' = 1, t <= T, v_w >= 0, v_e >= 0
    }@invariant(
                 t >= 0,
                 x_w = cute_r*dy_w,
                 y_w = -cute_r*dx_w,
                 x_e = cute_r*dy_e,
                 y_e = -cute_r*dx_e,
                 dx_w^2 + dy_w^2 = 1,
                 dx_e^2 + dy_e^2 = 1,
                 (x_w)^2 + (y_w)^2 = cute_r^2,
                 (x_e)^2 + (y_e)^2 = cute_r^2, 
                 (x_w - x_e)^2 + (y_w - y_e)^2 = (2*cute_r)^2
                )
   )*@invariant(
                x_w = cute_r*dy_w &
                y_w = -cute_r*dx_w &
                x_e = cute_r*dy_e &
                y_e = -cute_r*dx_e &
                dx_w^2 + dy_w^2 = 1 &
                dx_e^2 + dy_e^2 = 1 &
                (x_w)^2 + (y_w)^2 = cute_r^2 &
                (x_e)^2 + (y_e)^2 = cute_r^2 &
                v_w > 0 &
                v_e > 0 & 
                (x_w - x_e)^2 + (y_w - y_e)^2 = (2*cute_r)^2
                )
\](
(x_w - x_e)^2 + (y_w - y_e)^2 = (2*cute_r)^2
)

}

